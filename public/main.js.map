{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/modules/api-authentication/api-authentication-routing.module.ts","./src/app/modules/api-authentication/api-authentication.module.ts","./src/app/modules/api-authentication/core/base/mapper.ts","./src/app/modules/api-authentication/core/core.module.ts","./src/app/modules/api-authentication/core/repositories/api-authentication.repository.ts","./src/app/modules/api-authentication/core/usecases/login-user.usecase.ts","./src/app/modules/api-authentication/data/api-authentication-repository/api-authentication-repository-impl.ts","./src/app/modules/api-authentication/data/api-authentication-repository/login-user-mappter.ts","./src/app/modules/api-authentication/data/data.module.ts","./src/app/modules/api-authentication/presentation/api-authentication.service.ts","./src/app/modules/api-authentication/presentation/ngrx/login-user/login-user-actions.ts","./src/app/modules/api-authentication/presentation/ngrx/login-user/login-user-reducer.ts","./src/app/modules/api-authentication/presentation/ngrx/ngrx.module.ts","./src/app/modules/api-authentication/presentation/presentation.module.ts","./src/app/modules/api-authentication/presentation/verification-page/verification-page.component.ts","./src/app/modules/api-authentication/presentation/verification-page/verification-page.component.html","./src/app/modules/recipe-crud/core/base/mapper.ts","./src/app/modules/recipe-crud/core/core.module.ts","./src/app/modules/recipe-crud/core/repositories/recipe.repository.ts","./src/app/modules/recipe-crud/core/usecases/add-recipe.usecase.ts","./src/app/modules/recipe-crud/core/usecases/get-all-recipes.usecase.ts","./src/app/modules/recipe-crud/core/usecases/get-recipe-usecase.ts","./src/app/modules/recipe-crud/data/data.module.ts","./src/app/modules/recipe-crud/data/repository/recipe-repository/recipe-repository-impl.ts","./src/app/modules/recipe-crud/data/repository/recipe-repository/recipe-repository-mapper.ts","./src/app/modules/recipe-crud/presentation/crop-image/crop-image.component.ts","./src/app/modules/recipe-crud/presentation/crop-image/crop-image.component.html","./src/app/modules/recipe-crud/presentation/ngrx/crop_image/crop_image.reducer.ts","./src/app/modules/recipe-crud/presentation/ngrx/ngrx.module.ts","./src/app/modules/recipe-crud/presentation/ngrx/recipe/add-recipe/add-recipe-action.ts","./src/app/modules/recipe-crud/presentation/ngrx/recipe/add-recipe/add-recipe-reducer.ts","./src/app/modules/recipe-crud/presentation/ngrx/recipe/get-all-recipes/get-all-recipe-actions.ts","./src/app/modules/recipe-crud/presentation/ngrx/recipe/get-all-recipes/get-all-recipe-reducer.ts","./src/app/modules/recipe-crud/presentation/ngrx/recipe/get-recipe/get-recipe-actions.ts","./src/app/modules/recipe-crud/presentation/ngrx/recipe/get-recipe/get-recipe-reducer.ts","./src/app/modules/recipe-crud/presentation/ngrx/recipe/recipe.service.ts","./src/app/modules/recipe-crud/presentation/presentation.module.ts","./src/app/modules/recipe-crud/presentation/recipe-add/recipe-add.component.ts","./src/app/modules/recipe-crud/presentation/recipe-add/recipe-add.component.html","./src/app/modules/recipe-crud/presentation/recipe-crud-overview/recipe-crud-overview.component.html","./src/app/modules/recipe-crud/presentation/recipe-crud-overview/recipe-crud-overview.component.ts","./src/app/modules/recipe-crud/presentation/recipe-info/recipe-info.component.ts","./src/app/modules/recipe-crud/presentation/recipe-info/recipe-info.component.html","./src/app/modules/recipe-crud/presentation/recipe-table/recipe-table.component.ts","./src/app/modules/recipe-crud/presentation/recipe-table/recipe-table.component.html","./src/app/modules/recipe-crud/presentation/recipe-update/recipe-update.component.ts","./src/app/modules/recipe-crud/presentation/recipe-update/recipe-update.component.html","./src/app/modules/recipe-crud/recipe-crud-routing.module.ts","./src/app/modules/recipe-crud/recipe-crud.module.ts","./src/app/modules/shared/components/button/button.component.ts","./src/app/modules/shared/components/button/button.component.html","./src/app/modules/shared/components/checkbox/checkbox.component.ts","./src/app/modules/shared/components/checkbox/checkbox.component.html","./src/app/modules/shared/components/container/container.component.ts","./src/app/modules/shared/components/container/container.component.html","./src/app/modules/shared/components/floating-button/floating-button.component.ts","./src/app/modules/shared/components/floating-button/floating-button.component.html","./src/app/modules/shared/components/header/header.component.ts","./src/app/modules/shared/components/header/header.component.html","./src/app/modules/shared/components/input/input.component.ts","./src/app/modules/shared/components/input/input.component.html","./src/app/modules/shared/components/snackbar/snackbar.component.ts","./src/app/modules/shared/components/snackbar/snackbar.component.html","./src/app/modules/shared/pipes/typeof.pipe.ts","./src/app/modules/shared/services/auth.guard.ts","./src/app/modules/shared/services/snackbar.service.ts","./src/app/modules/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'kubo-api';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ApiAuthenticationModule } from './modules/api-authentication/api-authentication.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RecipeCrudModule } from './modules/recipe-crud/recipe-crud.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ApiAuthenticationModule,\r\n    RecipeCrudModule,\r\n    RouterModule,\r\n    BrowserAnimationsModule,\r\n  ],\r\n  providers: [\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { VerificationPageComponent } from './presentation/verification-page/verification-page.component';\n\nconst routes: Routes = [\n  {path: '', component: VerificationPageComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class ApiAuthenticationRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PresentationModule } from './presentation/presentation.module';\nimport { CoreModule } from './core/core.module';\nimport { DataModule } from './data/data.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    PresentationModule,\n    CoreModule,\n    DataModule,\n  ]\n})\nexport class ApiAuthenticationModule { }\n","export abstract class Mapper<I, O> {\r\n  abstract mapFrom(param: I): O;\r\n  abstract mapTo(param: O): I;\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class CoreModule { }\n","import { Observable } from \"rxjs\";\r\nimport { LoginUserModel } from \"../domain/login-user.model\";\r\n\r\nexport abstract class ApiAuthenticationRepository{\r\n  abstract loginUser(param : {email: string, password: string}) : Observable<LoginUserModel>;\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { UseCase } from \"../base/use-case\";\r\nimport { LoginUserModel } from \"../domain/login-user.model\";\r\nimport { ApiAuthenticationRepository } from \"../repositories/api-authentication.repository\";\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoginUserUsecase implements UseCase<{email : string, password: string}, LoginUserModel>{\r\n\r\n  constructor(private apiAuthenticationRepository: ApiAuthenticationRepository){\r\n\r\n  }\r\n\r\n  execute(params: { email: string; password: string; }): Observable<LoginUserModel> {\r\n    return this.apiAuthenticationRepository.loginUser(params);\r\n  }\r\n\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { map, Observable } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { LoginUserModel } from \"../../core/domain/login-user.model\";\r\nimport { ApiAuthenticationRepository } from \"../../core/repositories/api-authentication.repository\";\r\nimport { LoginUserMockMapper } from \"../api-authentication-mock-repository/login-user-mock-mapper\";\r\nimport { LoginUserEntity } from \"./login-user-entity\";\r\nimport { LoginUserMapper } from \"./login-user-mappter\";\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApiAuthenticationRepositoryImpl extends ApiAuthenticationRepository{\r\n\r\n  loginUserMapper = new LoginUserMapper();\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ){\r\n    super();\r\n  }\r\n\r\n  loginUser(param: { email: string; password: string; }): Observable<LoginUserModel> {\r\n    return this.http.post<LoginUserEntity>(environment.url + \"api/login\", param, {\r\n      withCredentials: true\r\n    }).pipe(map(this.loginUserMapper.mapFrom));\r\n  }\r\n\r\n}\r\n","import { Mapper } from \"../../core/base/mapper\";\r\nimport { LoginUserModel } from \"../../core/domain/login-user.model\";\r\nimport { LoginUserEntity } from \"./login-user-entity\";\r\n\r\nexport class LoginUserMapper extends Mapper<LoginUserEntity, LoginUserModel>{\r\n  mapFrom(param: LoginUserEntity): LoginUserModel {\r\n    return {\r\n      message : param.message,\r\n      token: param.token,\r\n    }\r\n  }\r\n  mapTo(param: LoginUserModel): LoginUserEntity {\r\n    return {\r\n      message : param.message,\r\n      token: param.token,\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class DataModule { }\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { SnackbarService } from '../../shared/services/snackbar.service';\nimport { LoginUserUsecase } from '../core/usecases/login-user.usecase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiAuthenticationService {\n\n  constructor(\n    private store: Store<{}>,\n    private loginUserUseCase : LoginUserUsecase,\n    private snackBarService: SnackbarService\n  ) { }\n\n  /** Chech is user is authenticated */\n  isAuthenticated(): boolean {\n    return true;\n  }\n\n  /** Login User */\n  loginUser(params: {email: string, password: string}) : void{\n    this.loginUserUseCase.execute(params).subscribe({\n      next: (v) => {\n        this.snackBarService.openDuratedSnackBar(v.message);\n      },\n      error : (e) => this.snackBarService.openDuratedSnackBar(e.error.message),\n    });\n  }\n\n}\n","import { createAction, props } from \"@ngrx/store\";\r\n\r\nexport const loginInProgress = createAction('[ Login ] in progress');\r\nexport const loginSuccess = createAction('[ Login ] success', props<{email: string, password: string}>());\r\nexport const loginFail = createAction('[ Login ] fails');\r\n","import { createReducer, on } from \"@ngrx/store\"\r\nimport { loginFail, loginInProgress, loginSuccess } from \"./login-user-actions\";\r\n\r\nexport enum LoginUserState {\r\n  initial,\r\n  inProgress,\r\n  success,\r\n  fail,\r\n}\r\n\r\nconst LOGIN_USER_INITIAL_STATE : { status: LoginUserState, token?: string} = {\r\n  status: LoginUserState.initial,\r\n}\r\n\r\nconst LOGIN_USER_REDUCER = createReducer(\r\n  LOGIN_USER_INITIAL_STATE,\r\n  on(loginInProgress,(state) => ({status : LoginUserState.inProgress})),\r\n  on(loginSuccess,(state) => ({status : LoginUserState.success, token: state.token})),\r\n  on(loginFail,(state) => ({status : LoginUserState.inProgress})),\r\n);\r\n\r\nexport function loginUserReducer (state: any, action: any){\r\n  return LOGIN_USER_REDUCER(state, action);\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { loginUserReducer } from './login-user/login-user-reducer';\nimport { StoreModule } from '@ngrx/store';\nimport { ApiAuthenticationRepository } from '../../core/repositories/api-authentication.repository';\nimport { ApiAuthenticationMockRepositoryImpl } from '../../data/api-authentication-mock-repository/api-authentication-mock-repository-impl';\nimport { ApiAuthenticationRepositoryImpl } from '../../data/api-authentication-repository/api-authentication-repository-impl';\n\n\n\nconst reducer:object = {\n  loginReducer: loginUserReducer,\n};\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    StoreModule.forRoot(reducer),\n  ],\n  providers: [\n    { provide: ApiAuthenticationRepository, useClass: ApiAuthenticationRepositoryImpl }\n  ]\n})\nexport class NgrxModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VerificationPageComponent } from './verification-page/verification-page.component';\nimport { ApiAuthenticationRoutingModule } from '../api-authentication-routing.module';\nimport { SharedModule } from '../../shared/shared.module';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { NgrxModule } from './ngrx/ngrx.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    VerificationPageComponent,\n  ],\n  imports: [\n    CommonModule,\n    ApiAuthenticationRoutingModule,\n    SharedModule,\n    MatCheckboxModule,\n    NgrxModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class PresentationModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ApiAuthenticationService } from '../api-authentication.service';\n\n@Component({\n  selector: 'app-verification-page',\n  templateUrl: './verification-page.component.html',\n  styleUrls: ['./verification-page.component.sass']\n})\nexport class VerificationPageComponent {\n\n  form : FormGroup;\n\n  constructor(\n    private apiAuthenticationService : ApiAuthenticationService,\n    private fb: FormBuilder,\n  ) {\n    this.form = fb.group({\n      email: [''],\n      password: ['']\n    });\n  }\n\n  submit(){\n    const email = this.form.get('email')?.value;\n    const password = this.form.get('password')?.value;\n\n    this.apiAuthenticationService.loginUser({\n      email: email,\n      password: password,\n    });\n  }\n\n}\n","<section class=\" flex items-center justify-center h-[92vh]\">\n  <form [formGroup]=\"form\" class=\"w-[25%]\" (ngSubmit)=\"submit()\">\n    <app-input placeholder=\"Email\" type='text' class=\"flex-1\" formControlName='email'></app-input>\n    <app-input placeholder=\"Password\" type='password' class=\"flex-1\" formControlName='password'></app-input>\n\n    <div class=\"flex justify-between items-center\">\n      <mat-checkbox class=\"example-margin\">Remember Me</mat-checkbox>\n      <app-button submit>Login</app-button>\n    </div>\n  </form>\n</section>\n","export abstract class Mapper<I, O> {\r\n  abstract mapFrom(param: I): O;\r\n  abstract mapTo(param: O): I;\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class CoreModule { }\n","import { Observable } from \"rxjs\";\r\nimport { RecipeModel } from \"../domain/recipe.model\";\r\n\r\nexport abstract class RecipeRepository{\r\n\r\n  abstract getAllRecipes() : Observable<RecipeModel>;\r\n  abstract getRecipe(_id: string) : Observable<RecipeModel>;\r\n\r\n  abstract addRecipe(recipeFormData: FormData) : Observable<{message : string}>;\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { UseCase } from \"../base/use-case\";\r\nimport { RecipeModel } from \"../domain/recipe.model\";\r\nimport { RecipeRepository } from \"../repositories/recipe.repository\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddRecipeUseCase implements UseCase<FormData, {message: string}>{\r\n\r\n  constructor(\r\n    private recipeRepository: RecipeRepository,\r\n  ){}\r\n\r\n  execute(params: FormData): Observable<{message: string}> {\r\n    return this.recipeRepository.addRecipe(params);\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { UseCase } from \"../base/use-case\";\r\nimport { RecipeModel } from \"../domain/recipe.model\";\r\nimport { RecipeRepository } from \"../repositories/recipe.repository\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GetAllRecipesUsecase implements UseCase<void, RecipeModel>{\r\n\r\n  constructor(\r\n    private recipeRepository: RecipeRepository\r\n  ){}\r\n\r\n  execute(params: void): Observable<RecipeModel> {\r\n    return this.recipeRepository.getAllRecipes();\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { UseCase } from \"../base/use-case\";\r\nimport { RecipeModel } from \"../domain/recipe.model\";\r\nimport { RecipeRepository } from \"../repositories/recipe.repository\";\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GetRecipeUseCase implements UseCase<string, RecipeModel>{\r\n\r\n  constructor(\r\n    private recipeRepository: RecipeRepository,\r\n  ){}\r\n\r\n  execute(_id: string): Observable<RecipeModel> {\r\n    return this.recipeRepository.getRecipe(_id);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n  ]\n})\nexport class DataModule { }\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { response } from \"express\";\r\nimport {  map, mergeMap, Observable } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { RecipeModel } from \"../../../core/domain/recipe.model\";\r\nimport { RecipeRepository } from \"../../../core/repositories/recipe.repository\";\r\nimport { RecipeEntity } from \"./recipe-entity\";\r\nimport { RecipeRepositoryMapper } from \"./recipe-repository-mapper\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RecipeRepositoryImpl extends RecipeRepository {\r\n\r\n  mapper = new RecipeRepositoryMapper();\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ){\r\n    super();\r\n  }\r\n\r\n  getAllRecipes(): Observable<RecipeModel> {\r\n    return this.http.get<{message: string, data: RecipeEntity[]}>(environment.url + 'api/recipe/')\r\n      .pipe(mergeMap((item) => {\r\n\r\n        return item.data\r\n      }))\r\n      .pipe(map(this.mapper.mapFrom));\r\n  }\r\n\r\n  getRecipe(_id: string): Observable<RecipeModel> {\r\n    return this.http.get<{message: string, data: RecipeEntity}>(environment.url + `api/recipe/single/${_id}`)\r\n      .pipe(map((item)=>item.data))\r\n      .pipe(map(this.mapper.mapFrom));\r\n  }\r\n\r\n  addRecipe(recipeFormData: FormData): Observable<{ message: string; }> {\r\n    return this.http.post<{message : string}>(environment.url + 'api/recipe/add', recipeFormData);\r\n  }\r\n\r\n\r\n}\r\n","import { Mapper } from \"../../../core/base/mapper\";\r\nimport { RecipeModel } from \"../../../core/domain/recipe.model\";\r\nimport { RecipeEntity } from \"./recipe-entity\";\r\n\r\nexport class RecipeRepositoryMapper extends Mapper<RecipeEntity, RecipeModel>{\r\n\r\n  mapFrom(param: RecipeEntity): RecipeModel {\r\n    return {\r\n      _id: param._id,\r\n      name: param.name,\r\n      description: param.description,\r\n      reference: param.reference,\r\n      ingredients: param.ingredients,\r\n      displayPhoto: param.displayPhoto,\r\n    }\r\n  }\r\n  mapTo(param: RecipeModel): RecipeEntity {\r\n    return {\r\n      _id: param._id,\r\n      name: param.name,\r\n      description: param.description,\r\n      reference: param.reference,\r\n      ingredients: param.ingredients,\r\n      displayPhoto: param.displayPhoto,\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { ImageCroppedEvent, LoadedImage } from 'ngx-image-cropper';\nimport { Observable } from 'rxjs';\nimport { cropImageSuccess } from '../ngrx/crop_image/crop_image.reducer';\n\n@Component({\n  selector: 'app-crop-image',\n  templateUrl: './crop-image.component.html',\n  styleUrls: ['./crop-image.component.sass']\n})\nexport class CropImageComponent implements OnInit {\n\n  imageChangedEvent$ : Observable<Event>;\n  croppedImage: any = '';\n\n  constructor(\n    private readonly router: Router,\n    private readonly store: Store<{\n      cropImageReducer: Event,\n    }>,\n  ) {\n    this.imageChangedEvent$ = this.store.select('cropImageReducer');\n  }\n\n  ngOnInit(): void {\n  }\n\n  imageCropped(event: ImageCroppedEvent) {\n    this.croppedImage = event.base64;\n\n  }\n\n  sendCroppedImage(){\n\n    this.store.dispatch(cropImageSuccess({imagePath: this.croppedImage}));\n    this.router.navigate(['/overview/add']);\n  }\n\n  imageLoaded() {\n      // show cropper\n  }\n  cropperReady() {\n      // cropper ready\n  }\n  loadImageFailed() {\n      // show message\n  }\n\n}\n","<app-header></app-header>\n\n<app-floating-button (click)=\"sendCroppedImage()\" >Crop</app-floating-button>\n\n<app-container class=\"justify-center flex items-center\">\n\n  <div class='float-left' >\n\n      <image-cropper\n        *ngIf=\"(imageChangedEvent$ | async) as imageChangedEvent\"\n        [imageChangedEvent]=\"imageChangedEvent\"\n        [maintainAspectRatio]=\"true\"\n        [aspectRatio]=\"3/4\"\n        [resizeToWidth]=\"500\"\n        format=\"png\"\n        (imageCropped)=\"imageCropped($event)\"\n        (imageLoaded)=\"imageLoaded()\"\n        (cropperReady)=\"cropperReady()\"\n        (loadImageFailed)=\"loadImageFailed()\"\n      ></image-cropper>\n\n  </div>\n\n\n</app-container>\n","import { createReducer, on, createAction, props } from \"@ngrx/store\";\r\n\r\n\r\n\r\nconst CROP_IMAGE_INITIAL_STATE : any = null;\r\n\r\nexport const cropImageReset = createAction(\r\n  '[Crop Image] Reset'\r\n)\r\n\r\nexport const cropImage = createAction(\r\n  '[Crop Image]',\r\n  props<{event : Event  }>(),\r\n)\r\n\r\nexport const cropImageSuccess = createAction(\r\n  '[Crop Image] Success',\r\n  props<{ imagePath : string | null  }>(),\r\n)\r\n\r\n\r\nconst CROP_IMAGE_REDUCER = createReducer(\r\n  CROP_IMAGE_INITIAL_STATE,\r\n  on(cropImage, (state,{event}) => event ),\r\n  on(cropImageSuccess, (state,{imagePath}) => imagePath ),\r\n  on(cropImageReset, (state) => null),\r\n);\r\n\r\n\r\nexport function cropImageReducer(state: any, action: any) {\r\n  return CROP_IMAGE_REDUCER(state, action);\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RecipeRepository } from '../../core/repositories/recipe.repository';\r\nimport { RecipeRepositoryImpl } from '../../data/repository/recipe-repository/recipe-repository-impl';\r\nimport { cropImageReducer } from './crop_image/crop_image.reducer';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { getAllRecipeReducer } from './recipe/get-all-recipes/get-all-recipe-reducer';\r\nimport { getRecipeReducer } from './recipe/get-recipe/get-recipe-reducer';\r\nimport { addRecipeReducer } from './recipe/add-recipe/add-recipe-reducer';\r\n\r\n\r\nconst reducer:object = {\r\n  cropImageReducer: cropImageReducer,\r\n  getAllRecipeReducer: getAllRecipeReducer,\r\n  getRecipeReducer: getRecipeReducer,\r\n  addRecipeReducer: addRecipeReducer,\r\n};\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    StoreModule.forRoot(reducer),\r\n  ],\r\n  providers: [\r\n    { provide: RecipeRepository, useClass: RecipeRepositoryImpl }\r\n  ]\r\n})\r\nexport class NgrxModule { }\r\n","import { createAction, props } from \"@ngrx/store\";\r\nimport { RecipeModel } from \"src/app/modules/recipe-crud/core/domain/recipe.model\";\r\n\r\nexport const addRecipeInProgress = createAction(\r\n  '[Add Recipe] in progress',\r\n  props<{recipe: RecipeModel}>(),\r\n)\r\n\r\nexport const addRecipeSuccess = createAction(\r\n  '[Add Recipe] success'\r\n);\r\n","import { createReducer, on } from \"@ngrx/store\";\r\nimport { RecipeModel } from \"src/app/modules/recipe-crud/core/domain/recipe.model\";\r\nimport { addRecipeInProgress, addRecipeSuccess } from \"./add-recipe-action\";\r\n\r\nlet ADD_RECIPE_INITIAL_STATE : RecipeModel | undefined;\r\n\r\n\r\nconst ADD_RECIPE_REDUCER = createReducer(\r\n  ADD_RECIPE_INITIAL_STATE,\r\n  on(addRecipeInProgress,(state, {recipe}) => {\r\n\r\n    if(state){\r\n      return {\r\n        ...state,\r\n        ...recipe,\r\n      }\r\n    }\r\n\r\n    return recipe;\r\n  }\r\n\r\n  ),\r\n  on(addRecipeSuccess, (state)=> state),\r\n)\r\n\r\nexport function addRecipeReducer(state: any, action: any){\r\n  return ADD_RECIPE_REDUCER(state, action);\r\n}\r\n","import { createAction, props } from \"@ngrx/store\";\r\nimport { RecipeModel } from \"src/app/modules/recipe-crud/core/domain/recipe.model\";\r\n\r\nexport const recipeFetchInProgress = createAction('[ Recipe ] in progress');\r\n\r\nexport const recipeFetchSuccess = createAction(\r\n  '[ Recipe ] fetch success',\r\n  props<{recipe : RecipeModel }>()\r\n);\r\n\r\nexport const recipeFetchFailure = createAction(\r\n  '[ Recipe ] fetch fail'\r\n);\r\n","import { createReducer, on } from \"@ngrx/store\";\r\nimport { RecipeModel } from \"src/app/modules/recipe-crud/core/domain/recipe.model\";\r\nimport { recipeFetchFailure, recipeFetchInProgress, recipeFetchSuccess } from \"./get-all-recipe-actions\";\r\n\r\n\r\nconst GET_ALL_RECIPE_INITIAL_STATE : Array<RecipeModel> = [];\r\n\r\nconst GET_ALL_RECIPE_REDUCER = createReducer(\r\n  GET_ALL_RECIPE_INITIAL_STATE,\r\n  on(recipeFetchInProgress, (state) => []),\r\n  on(recipeFetchSuccess, (state, {recipe}) => [...state , recipe]),\r\n  on(recipeFetchFailure, (state) => state),\r\n);\r\n\r\nexport function getAllRecipeReducer(state: any, action: any){\r\n  return GET_ALL_RECIPE_REDUCER(state, action);\r\n}\r\n","import { createAction, props } from \"@ngrx/store\";\r\nimport { RecipeModel } from \"src/app/modules/recipe-crud/core/domain/recipe.model\";\r\n\r\nexport const singleRecipeInProgress = createAction(\r\n  '[Single Recipe] in progress'\r\n)\r\n\r\nexport const singleRecipeSuccess = createAction(\r\n  '[Single Recipe] success',\r\n  props<{recipe: RecipeModel}>(),\r\n)\r\n\r\nexport const singleRecipeFails = createAction(\r\n  '[Single Recipe] fails'\r\n)\r\n","import { createReducer, on } from \"@ngrx/store\";\r\nimport { RecipeModel } from \"src/app/modules/recipe-crud/core/domain/recipe.model\";\r\nimport { singleRecipeFails, singleRecipeInProgress, singleRecipeSuccess } from \"./get-recipe-actions\";\r\n\r\n\r\nlet GET_RECIPE_INITIAL_STATE : RecipeModel | undefined;\r\n\r\nconst GET_RECIPE_REDUCER = createReducer(\r\n  GET_RECIPE_INITIAL_STATE,\r\n  on(singleRecipeInProgress, (state) => undefined),\r\n  on(singleRecipeSuccess, (state, {recipe})=> recipe),\r\n  on(singleRecipeFails, (state) => state),\r\n);\r\n\r\nexport function getRecipeReducer(state: any, action: any){\r\n  return GET_RECIPE_REDUCER(state, action);\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { SnackbarService } from 'src/app/modules/shared/services/snackbar.service';\r\nimport { RecipeModel } from '../../../core/domain/recipe.model';\r\nimport { AddRecipeUseCase } from '../../../core/usecases/add-recipe.usecase';\r\nimport { GetAllRecipesUsecase } from '../../../core/usecases/get-all-recipes.usecase';\r\nimport { GetRecipeUseCase } from '../../../core/usecases/get-recipe-usecase';\r\nimport { cropImageReset } from '../crop_image/crop_image.reducer';\r\nimport { addRecipeInProgress, addRecipeSuccess } from './add-recipe/add-recipe-action';\r\nimport { recipeFetchInProgress, recipeFetchSuccess } from './get-all-recipes/get-all-recipe-actions';\r\nimport { singleRecipeSuccess } from './get-recipe/get-recipe-actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RecipeService {\r\n\r\n  constructor(\r\n    private getAllRecipeUsecase: GetAllRecipesUsecase,\r\n    private getRecipeUseCase: GetRecipeUseCase,\r\n    private addRecipeUseCase: AddRecipeUseCase,\r\n    private store: Store<{}>,\r\n    private route: Router,\r\n    private _snackBarServices : SnackbarService,\r\n  ) { }\r\n\r\n  getAllRecipe(){\r\n    this.store.dispatch(recipeFetchInProgress());\r\n\r\n    this.getAllRecipeUsecase.execute().subscribe((value: RecipeModel)=>{\r\n      this.store.dispatch(recipeFetchSuccess({recipe: value}));\r\n    });\r\n  }\r\n\r\n  getRecipe(_id : string ){\r\n    this.getRecipeUseCase.execute(_id).subscribe((value: RecipeModel)=>{\r\n      this.store.dispatch(singleRecipeSuccess({recipe: value}));\r\n    });\r\n  }\r\n\r\n  addRecipeInProgress(\r\n    recipe: RecipeModel\r\n  ){\r\n    this.store.dispatch(addRecipeInProgress({recipe}));\r\n  }\r\n\r\n  addRecipeSuccess(\r\n    recipe: RecipeModel\r\n  ){\r\n\r\n\r\n    if(recipe.displayPhoto){\r\n      fetch(recipe.displayPhoto)\r\n      .then(res => res.blob())\r\n      .then(displayPhoto => {\r\n\r\n        const recipeFormData = new FormData();\r\n\r\n        recipeFormData.append('name', recipe.name);\r\n        recipeFormData.append('description', recipe.description);\r\n        recipeFormData.append('reference', recipe.reference);\r\n        recipeFormData.append('ingredients', JSON.stringify(recipe.ingredients));\r\n        recipeFormData.append('displayPhoto', displayPhoto);\r\n\r\n        this.addRecipeUseCase.execute(recipeFormData).subscribe((response: { message: string })=> {\r\n          const message = response.message;\r\n\r\n          this.store.dispatch(addRecipeSuccess());\r\n          this._snackBarServices.openDuratedSnackBar(message);\r\n          this.store.dispatch(cropImageReset());\r\n          this.route.navigate(['/overview']);\r\n\r\n        });\r\n\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RecipeCrudOverviewComponent } from './recipe-crud-overview/recipe-crud-overview.component';\nimport { RecipeTableComponent } from './recipe-table/recipe-table.component';\nimport { RecipeInfoComponent } from './recipe-info/recipe-info.component';\nimport { CropImageComponent } from './crop-image/crop-image.component';\nimport { RecipeAddComponent } from './recipe-add/recipe-add.component';\nimport { RecipeUpdateComponent } from './recipe-update/recipe-update.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatTableModule } from '@angular/material/table';\nimport { ImageCropperModule } from 'ngx-image-cropper';\nimport { SharedModule } from '../../shared/shared.module';\nimport { NgrxModule } from './ngrx/ngrx.module';\nimport { RouterModule } from '@angular/router';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSortModule} from '@angular/material/sort';\n\n\n@NgModule({\n  declarations: [\n    RecipeCrudOverviewComponent,\n    RecipeTableComponent,\n    RecipeInfoComponent,\n    CropImageComponent,\n    RecipeAddComponent,\n    RecipeUpdateComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MatTableModule,\n    ImageCropperModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    NgrxModule,\n    RouterModule,\n    MatPaginatorModule,\n    MatSortModule,\n  ],\n})\nexport class PresentationModule { }\n","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-recipe-add',\n  templateUrl: './recipe-add.component.html',\n  styleUrls: ['./recipe-add.component.sass']\n})\nexport class RecipeAddComponent implements OnInit {\n\n  constructor(\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n\n<app-container>\n\n  <app-recipe-info>\n    <app-button [expand]=\"true\" submit>\n      Create Recipe\n    </app-button>\n  </app-recipe-info>\n\n</app-container>\n","<app-header></app-header>\n\n<app-container class=\"flex flex-col\" >\n  <h1>Recipe Table</h1>\n  <app-floating-button routerLink=\"add\">\n    <mat-icon>add</mat-icon>\n  </app-floating-button>\n\n  <ng-container *ngIf=\"(recipes$ | async) as recipes\">\n    <ng-container *ngIf=\"recipes.length != 0\">\n      <app-recipe-table  [recipes]=\"recipes\"></app-recipe-table>\n    </ng-container>\n  </ng-container>\n</app-container>\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { RecipeModel } from '../../core/domain/recipe.model';\nimport { RecipeService } from '../ngrx/recipe/recipe.service';\n\n@Component({\n  selector: 'app-recipe-crud-overview',\n  templateUrl: './recipe-crud-overview.component.html',\n  styleUrls: ['./recipe-crud-overview.component.sass']\n})\nexport class RecipeCrudOverviewComponent implements OnInit {\n\n  recipes$: Observable<Array<RecipeModel>>;\n\n  constructor(\n    private recipeService: RecipeService,\n    private store: Store<{ getAllRecipeReducer: Array<RecipeModel>}>,\n  ) {\n    this.recipes$ = this.store.select('getAllRecipeReducer');\n  }\n\n  ngOnInit(): void {\n    this.recipeService.getAllRecipe();\n  }\n}\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { map, Observable, take } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RecipeModel } from '../../core/domain/recipe.model';\r\nimport { cropImage } from '../ngrx/crop_image/crop_image.reducer';\r\nimport { RecipeService } from '../ngrx/recipe/recipe.service';\r\n@Component({\r\n  selector: 'app-recipe-info',\r\n  templateUrl: './recipe-info.component.html',\r\n  styleUrls: ['./recipe-info.component.sass']\r\n})\r\nexport class RecipeInfoComponent implements OnInit, OnDestroy {\r\n\r\n  @Input('recipe') recipe: RecipeModel | null  = null;\r\n\r\n  imagePath$ : Observable<string | null>;\r\n  recipeInprogress$ : Observable<RecipeModel | undefined>;\r\n  form : FormGroup;\r\n\r\n  ingredients: Array<string> = [];\r\n\r\n  ingredientList : string[] = [\r\n    'Talong',\r\n    'Okra',\r\n    'Repolyo',\r\n    'Ampalaya',\r\n    'KangKong',\r\n    'Carrot',\r\n    'Kamatis',\r\n    'Sayote',\r\n    'Upo',\r\n    'Sitaw',\r\n  ];\r\n\r\n  constructor(\r\n    private _fb: FormBuilder,\r\n    private router : Router,\r\n    private store : Store<{ cropImageReducer : string | null, addRecipeReducer: RecipeModel | undefined }>,\r\n    private recipeService: RecipeService,\r\n  ) {\r\n    this.imagePath$ = this.store.select('cropImageReducer');\r\n    this.recipeInprogress$ = this.store.select('addRecipeReducer');\r\n\r\n    this.form = this._fb.group({\r\n      name: [],\r\n      description: [],\r\n      reference: [],\r\n    });\r\n\r\n   }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    this.recipeService.addRecipeInProgress({\r\n      ...this.form.value,\r\n      ingredients: this.ingredients,\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(this.recipe){\r\n      this.form.patchValue({\r\n        name: this.recipe.name,\r\n        description: this.recipe.description,\r\n        reference: this.recipe.reference,\r\n      });\r\n    }else{\r\n\r\n      this.recipeInprogress$.pipe(take(1)).subscribe((recipe : any)=>{\r\n\r\n        if(recipe){\r\n          this.form.patchValue({\r\n            ...recipe,\r\n          });\r\n        }\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n\r\n  fileChangeEvent(event: any) {\r\n    this.store.dispatch(cropImage({event}));\r\n    this.router.navigate(['/overview/add/crop-image']);\r\n  }\r\n\r\n\r\n  ingredientsListener($event: {checked: boolean, value: string }){\r\n\r\n    if($event.checked){\r\n      this.ingredients.push($event.value);\r\n    }else{\r\n      this.ingredients = this.ingredients.filter((ingredient) => ingredient != $event.value);\r\n    }\r\n\r\n  }\r\n\r\n  submit(){\r\n    const name = this.form.get('name');\r\n    const description = this.form.get('description');\r\n    const reference = this.form.get('reference');\r\n\r\n\r\n    this.imagePath$.pipe(take(1)).subscribe((imagePath : any)=>{\r\n\r\n      this.recipeService.addRecipeSuccess(\r\n        {\r\n          name: name?.value,\r\n          description: description?.value,\r\n          ingredients: this.ingredients,\r\n          reference: reference?.value,\r\n          displayPhoto: imagePath,\r\n        }\r\n      );\r\n\r\n\r\n    });\r\n\r\n\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"flex flex-col items-center justify-center py-4 space-y-2 \">\r\n\r\n  <ng-container *ngIf=\"((imagePath$ | async) | typeof ) === 'string' \">\r\n\r\n    <div\r\n      id=\"recipe-picture\"\r\n      [style.background-image]=\"'url('+ (imagePath$ | async) + ')'\">\r\n    </div>\r\n\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"recipe?.displayPhoto\">\r\n    <div\r\n      id=\"recipe-picture\"\r\n      [style.background-image]=\"'url(' + recipe?.displayPhoto + ')'\">\r\n    </div>\r\n  </ng-container>\r\n\r\n  <input type=\"file\" class=\"hidden\" accept=\"image/*\" (change)=\"fileChangeEvent($event)\" #fileUploadElement>\r\n\r\n  <app-button (click)=\"fileUploadElement.click()\">\r\n    Select Image\r\n  </app-button>\r\n</div>\r\n\r\n<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n\r\n\r\n  <app-input placeholder=\"Name\" formControlName='name'></app-input>\r\n  <app-input placeholder=\"Description\" formControlName='description'></app-input>\r\n  <app-input placeholder=\"References\" textArea formControlName='reference'></app-input>\r\n\r\n  <ul class=\"my-4\">\r\n    <li *ngFor=\"let ingridient of ingredientList\" class=\"mt-[12px]\">\r\n      <app-checkbox (change)=\"ingredientsListener($event)\" [value]=\"ingridient\"></app-checkbox>\r\n    </li>\r\n  </ul>\r\n\r\n\r\n  <ng-content select=\"[submit]\"></ng-content>\r\n\r\n</form>\r\n\r\n","import {AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { RecipeModel } from '../../core/domain/recipe.model';\nimport { RecipeEntity } from '../../data/repository/recipe-repository/recipe-entity';\n\n\n/**\n * @title Basic use of `<table mat-table>`\n */\n\n@Component({\n  selector: 'app-recipe-table',\n  templateUrl: './recipe-table.component.html',\n  styleUrls: ['./recipe-table.component.sass']\n})\nexport class RecipeTableComponent implements AfterViewInit, OnInit {\n\n\n  @Input('recipes') recipes : Array<RecipeModel>  = [];\n\n  dataSource : MatTableDataSource<RecipeModel>;\n  @ViewChild(MatPaginator) paginator: MatPaginator | undefined;\n  @ViewChild(MatSort) sort: MatSort | undefined;\n\n  constructor(\n  ){\n    this.dataSource = new MatTableDataSource();\n  }\n  ngOnInit(): void {\n\n    this.dataSource.data = this.recipes\n  }\n\n  ngAfterViewInit(): void {\n    if(this.paginator ){\n      this.dataSource.paginator = this.paginator;\n    }\n\n    if(this.sort){\n      this.dataSource.sort = this.sort;\n    }\n  }\n\n  overviewTableColumns: string[] = ['_id', 'name', 'description', 'reference', 'ingredients'];\n\n}\n\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z0\" matSort>\r\n\r\n\r\n  <ng-container matColumnDef=\"_id\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element._id}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"name\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"description\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Decription </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.description}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"reference\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Reference </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.reference}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"ingredients\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Ingridients </th>\r\n    <td mat-cell *matCellDef=\"let element\">\r\n      {{element.ingredients}}\r\n    </td>\r\n  </ng-container>\r\n\r\n\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"overviewTableColumns\"></tr>\r\n  <tr\r\n    mat-row\r\n    *matRowDef=\"let row; columns: overviewTableColumns;\"\r\n    class=\"cursor-pointer hover:bg-gray-100\"\r\n    [routerLink]=\"['update', row._id]\"\r\n  ></tr>\r\n</table>\r\n\r\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of recipes\"></mat-paginator>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { RecipeModel } from '../../core/domain/recipe.model';\r\nimport { cropImageReset } from '../ngrx/crop_image/crop_image.reducer';\r\nimport { RecipeService } from '../ngrx/recipe/recipe.service';\r\n\r\n@Component({\r\n  selector: 'app-recipe-update',\r\n  templateUrl: './recipe-update.component.html',\r\n  styleUrls: ['./recipe-update.component.sass']\r\n})\r\nexport class RecipeUpdateComponent implements OnInit {\r\n\r\n  recipe$ : Observable<RecipeModel>;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private recipeService: RecipeService,\r\n    private store: Store<{getRecipeReducer: RecipeModel}>,\r\n  ) {\r\n    this.store.dispatch(cropImageReset());\r\n    this.recipe$ = this.store.select('getRecipeReducer');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    const recipe_id = this.activatedRoute.snapshot.paramMap.get('id');\r\n\r\n    if(recipe_id){\r\n      this.recipeService.getRecipe(recipe_id);\r\n    }\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n\r\n<app-floating-button>\r\n  <mat-icon>delete</mat-icon>\r\n</app-floating-button>\r\n\r\n<app-container>\r\n\r\n  <app-recipe-info [recipe]=\"recipe$ | async\" ></app-recipe-info>\r\n\r\n  <app-button [expand]=\"true\">\r\n    Update Recipe\r\n  </app-button>\r\n\r\n</app-container>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CropImageComponent } from './presentation/crop-image/crop-image.component';\r\nimport { RecipeCrudOverviewComponent } from './presentation/recipe-crud-overview/recipe-crud-overview.component';\r\nimport { RecipeAddComponent } from './presentation/recipe-add/recipe-add.component';\r\nimport { RecipeUpdateComponent } from './presentation/recipe-update/recipe-update.component';\r\nimport { AuthGuard } from '../shared/services/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'overview',\r\n    component: RecipeCrudOverviewComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'overview/add',\r\n    component: RecipeAddComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'overview/add/crop-image',\r\n    component: CropImageComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'overview/update/:id',\r\n    component: RecipeUpdateComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { scrollPositionRestoration: 'enabled', })],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class RecipeCrudRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PresentationModule } from './presentation/presentation.module';\nimport { DataModule } from './data/data.module';\nimport { CoreModule } from './core/core.module';\nimport { RecipeCrudRoutingModule } from './recipe-crud-routing.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    PresentationModule,\n    RecipeCrudRoutingModule,\n    DataModule,\n    CoreModule\n  ]\n})\nexport class RecipeCrudModule { }\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.sass']\n})\nexport class ButtonComponent implements OnInit {\n\n  @Input('title') title : string = 'Button';\n  @Input('expand') expand : boolean = false;\n  @Input('click') click : void = undefined;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<button mat-raised-button color=\"primary\" [ngClass]=\"{'w-full' : expand }\" (click)=\"click\">\n  <ng-content></ng-content>\n</button>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.sass']\n})\nexport class CheckboxComponent implements OnInit {\n\n\n  @Input('value') value : string  = '';\n  @Output('change') change = new EventEmitter<{checked: boolean, value: string }>();\n\n  constructor() { }\n\n  toggleNewItem($event: MatCheckboxChange){\n\n    this.change.emit({\n      checked: $event.checked,\n      value: this.value,\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<mat-checkbox (change)=\"toggleNewItem($event)\">\n  {{value}}\n</mat-checkbox>\n","import { Component, HostBinding, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.sass'],\n})\nexport class ContainerComponent implements OnInit {\n\n  @HostBinding('class') class = 'block container mx-auto py-3 px-4 lg:px-0';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ng-content></ng-content>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-floating-button',\n  templateUrl: './floating-button.component.html',\n  styleUrls: ['./floating-button.component.sass']\n})\nexport class FloatingButtonComponent implements OnInit {\n\n  @Input('click') click: void = undefined;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Floating Button -->\n<button mat-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\" class=\" bottom-4 right-4 !fixed z-50\" (click)=\"click\">\n  <ng-content></ng-content>\n</button>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.sass']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<mat-toolbar color=\"primary\">\n  <span class=\"cursor-pointer\" routerLink=\"/overview\">KUBO API</span>\n</mat-toolbar>\n","import { Component, forwardRef, Input, OnInit, Output } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { EventEmitter } from 'stream';\r\n\r\n@Component({\r\n  selector: 'app-input',\r\n  templateUrl: './input.component.html',\r\n  styleUrls: ['./input.component.sass'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => InputComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class InputComponent implements OnInit, ControlValueAccessor  {\r\n\r\n  @Input('placeholder') placeholder : string = 'Input placeholder';\r\n  @Input('type') type : string = 'text';\r\n  @Input('value') value : any = '';\r\n\r\n  onChange: any = () => { };\r\n  onTouched: any = () => { };\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.value = value;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  change( $event : any ) {\r\n    this.onChange($event.target.value);\r\n  }\r\n}\r\n","<mat-form-field class=\"w-full\" appearance=\"fill\">\n  <mat-label>{{placeholder}}</mat-label>\n  <input matInput [placeholder]=\"placeholder\" [value]=\"value\" [type]=\"type\" (change)=\"change($event)\">\n</mat-form-field>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.sass']\n})\nexport class SnackbarComponent  {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA)\n    public data : {\n      message : string,\n    }\n  ) { }\n\n}\n","<span class=\"message\">{{data.message}}</span>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'typeof'\n})\nexport class TypeofPipe implements PipeTransform {\n\n  transform(value: any): any {\n\n    return typeof value;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ApiAuthenticationService } from '../../api-authentication/presentation/api-authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authenticationService : ApiAuthenticationService,\n    private router: Router,\n  ){}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isAuthenticated = this.authenticationService.isAuthenticated();\n    if(!isAuthenticated){\n      this.router.navigate(['/']);\n    }\n    return isAuthenticated;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { SnackbarComponent } from '../components/snackbar/snackbar.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackbarService {\n\n  private _defaultDurationInSeconds = 2;\n  private _horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  private _verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n  constructor(private _snackBar : MatSnackBar) {}\n\n  openDuratedSnackBar(message: string){\n    this._snackBar.openFromComponent(SnackbarComponent, {\n      duration: this._defaultDurationInSeconds * 1000,\n      horizontalPosition: this._horizontalPosition,\n      verticalPosition: this._verticalPosition,\n      panelClass:['snackbar-background'],\n      data: {\n        message\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './components/header/header.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { InputComponent } from './components/input/input.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { ButtonComponent } from './components/button/button.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ContainerComponent } from './components/container/container.component';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { FloatingButtonComponent } from './components/floating-button/floating-button.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport { TypeofPipe } from './pipes/typeof.pipe';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { SnackbarComponent } from './components/snackbar/snackbar.component';\n\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    InputComponent,\n    ButtonComponent,\n    ContainerComponent,\n    CheckboxComponent,\n    FloatingButtonComponent,\n    TypeofPipe,\n    SnackbarComponent\n  ],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatIconModule,\n    RouterModule,\n    ReactiveFormsModule,\n    MatSnackBarModule,\n  ],\n  exports: [\n    HeaderComponent,\n    InputComponent,\n    ButtonComponent,\n    ContainerComponent,\n    CheckboxComponent,\n    FloatingButtonComponent,\n    TypeofPipe\n  ]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  url:'http://localhost:3000/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["cropImageSuccess","i0","ctx_r2","ctx_r4","ctx_r5","ctx_r6","CropImageComponent","constructor","router","store","imageChangedEvent$","select","ngOnInit","imageCropped","event","croppedImage","base64","sendCroppedImage","dispatch","imagePath","navigate","imageLoaded","cropperReady","loadImageFailed","selectors","decls","vars","consts","template","ctx","RecipeCrudOverviewComponent","recipeService","recipes$","getAllRecipe","take","cropImage","RecipeInfoComponent","_fb","imagePath$","recipeInprogress$","form","group","name","description","reference","ngOnDestroy","addRecipeInProgress","Object","value","ingredients","recipe","patchValue","pipe","subscribe","fileChangeEvent","ingredientsListener","$event","checked","push","filter","ingredient","submit","get","addRecipeSuccess","displayPhoto","inputs","ngContentSelectors","_r2","cropImageReset","RecipeUpdateComponent","activatedRoute","recipe$","recipe_id","snapshot","paramMap","getRecipe"],"sourceRoot":"webpack:///"}